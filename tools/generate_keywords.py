#!/usr/bin/env python3

# RCL -- A reasonable configuration language.
# Copyright 2025 Ruud van Asseldonk

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# A copy of the License has been included in the root of the repository.

"""
This scripts generates files that contain references to the keywords and builtins,
so that there is a single source of truth. We take the Pygments lexer in
//grammar/pygments as that source of truth, as it's a Python script that is easily
importable here.
"""

import os
import sys
import json

from typing import Iterable

sys.path.append(os.path.join(os.path.dirname(__file__), ".."))

from grammar.pygments.rcl import KEYWORDS, BUILTINS, TYPES


def generate_fuzz_dictionary() -> None:
    base = open("fuzz/dictionary_base.txt", "r", encoding="utf-8").read()
    with open("fuzz/dictionary.txt", "w", encoding="utf-8") as f:
        f.write("# This file is generated by tools/generate_keywords.py.\n\n")
        f.write(base)

        def write_section(title: str, elems: Iterable[str]) -> None:
            f.write(f"\n# {title}\n")
            for x in elems:
                json.dump(x, f)
                f.write("\n")

        write_section("Keywords.", KEYWORDS)
        write_section("Builtins methods.", BUILTINS)
        write_section("Builtin types.", TYPES)


if __name__ == "__main__":
    generate_fuzz_dictionary()
