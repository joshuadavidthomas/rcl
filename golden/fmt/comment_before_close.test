// Comments before closing delimiters should not be dropped.
let xs = [
  0,
  // This is one example.
];

let xs2 = [
  // Even with empty collections, the comment should stay.
];
let xs3 = {
  // And that is true of brace literals as well as bracket literals.
};

let xs4 = {
  42
  // In collections, a trailing comma is optional, but we can still have
  // comments after the final element. The comment forces tall mode, which
  // then does force a trailing comma on format, but that's fine.
};

let ys = foobar(
  0,
  // In a call, the comment should not be eaten either.
);

let f = (
  x,
  // And in an argument list, it should be preserved.
) => x;

let u0: Union[
  // Also in types.
] = null;
let u1: Union[
  Number,
  // Whether or not there is an element before it.
] = null;

null

# output:
// Comments before closing delimiters should not be dropped.
let xs = [
  0,
  // This is one example.
];

let xs2 = [
  // Even with empty collections, the comment should stay.
];
let xs3 = {
  // And that is true of brace literals as well as bracket literals.
};

let xs4 = {
  42,
  // In collections, a trailing comma is optional, but we can still have
  // comments after the final element. The comment forces tall mode, which
  // then does force a trailing comma on format, but that's fine.
};

let ys = foobar(
  0,
  // In a call, the comment should not be eaten either.
);

let f = (
  x,
  // And in an argument list, it should be preserved.
) => x;

let u0: Union[,
  // Also in types.
] = null;
let u1: Union[
  Number,
  // Whether or not there is an element before it.
] = null;

null
